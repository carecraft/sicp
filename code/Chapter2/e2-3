(define (make-segment ps pe)
  (cons ps pe))

(define (start-segment seg)
  (car seg))

(define (end-segment seg)
  (cdr seg))

(define (make-point x y)
  (cons x y))

(define (x-point p)
  (car p))

(define (y-point p)
  (cdr p))

;;;;;;;;
(define (make-rectangle seg1 seg2)
  (let ((x (abs (- (x-point (end-segment seg1))
                   (x-point (start-segment seg1)))))
        (y (abs (- (y-point (end-segment seg2))
                   (y-point (start-segment seg2))))))
    (cons x y)))

(define (length-rectangle rect)
  (car rect))
(define (width-rectangle rect)
  (cdr rect))
;;;;
(define (peri-rectangle rect)
  (* 2 (+ (length-rectangle rect)
          (width-rectangle rect))))
(define (area-rectangle rect)
  (* (length-rectangle rect)
     (width-rectangle rect)))

;;;;;
(define rect1 (make-rectangle (make-segment (make-point 1 2) (make-point 5 2))
                              (make-segment (make-point 1 2) (make-point 1 8))))
(peri-rectangle rect1)
(area-rectangle rect1)
