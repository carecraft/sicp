(define (iterative-improve good-enough? improve)
    (lambda (first-guess)
        (define (try guess)
            (let ((next (improve guess)))
                (if (good-enough? guess next)
                    next
                    (try next))))
        (try first-guess)))

(define (sqrt x)
  (define tolerance 0.00001)
  (define (good-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (improve guess)
    (average guess (/ x guess)))
  (define (average x y)
    (/ (+ x y) 2))
  ((iterative-improve good-enough? improve) 1.0))

(sqrt 10)


(define (fixed-point f first-guess)
  (define tolerance 0.00001)
  (define (good-enough? v1 v2)
    (< (abs (- v1 v2))
       tolerance))
  ((iterative-improve good-enough? f) first-guess))

(fixed-point cos 1.0)
