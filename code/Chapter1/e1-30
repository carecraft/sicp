(define (cube x)
  (* x x x))

(define (sum term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a)
              (+ (term a) result))))
  (iter a 0.0))

(define (integral f a b n)
  (define (odd? k)
    (= 1 (remainder k 2)))
  (define h (/ (- b a) n))
  (define (prefix k)
          (cond ((or (= k 0) (= k n)) 1)
                ((odd? k) 4)
                (else 2)))
  (define (y k)
    (f (+ a (* k h))))
  (define (term k)
    (* (prefix k) (y k)))
  (define (next k)
    (+ k 1))
  (if (odd? n)
      (error "n can't be odd")
      (* (/ h 3) (sum term 0.0 next n))))

(integral cube 0 1 100)

(integral cube 0 1 1000)
