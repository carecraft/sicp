(define tolerance 0.00001)

(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2))
       tolerance))
  (define (try guess step)
    (newline)
    (display step)
    (display " guess ")
    (display guess)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          next
          (try next (+ step 1)))))
  (try first-guess 1))

(define (my-x-term1 n)
  (fixed-point (lambda (x) (/ (log n) (log x))) 2.0))

(my-x-term1 1000)

(define (my-x-term2 n)
  (fixed-point (lambda (x) (/ (+ x (/ (log n) (log x))) 2)) 2.0))

(my-x-term2 1000)
